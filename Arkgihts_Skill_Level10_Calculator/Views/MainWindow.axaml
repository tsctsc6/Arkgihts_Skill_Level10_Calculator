<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:Arkgihts_Skill_Level10_Calculator.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Arkgihts_Skill_Level10_Calculator.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="Arkgihts_Skill_Level10_Calculator">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <Grid RowDefinitions="Auto, Auto, Auto, *">
        <Grid Grid.Row="0" ColumnDefinitions="Auto, Auto, *" Margin="10, 10, 0, 0">
            <Button Grid.Column="0" Content="更新干员和材料信息" Command="{Binding GetResourceInfoCommand}"
                    Margin="0, 0, 10, 0"/>
            <Button Grid.Column="1" Content="把剪贴板的内容粘贴到仓库文件中" Command="{Binding LoadDepotFromClipboardCommand}"
                    Margin="0, 0, 10, 0"/>
        </Grid>
        <Grid Grid.Row="1" ColumnDefinitions="Auto, Auto, Auto, *" Margin="10, 10, 0, 0">
            <AutoCompleteBox Grid.Column="0" ItemsSource="{Binding OperatorList}"
                             FilterMode="Contains" SelectedItem="{Binding SelectedOperator}"
                             Width="200" Margin="0, 0, 10, 0"/>
            <ComboBox Grid.Column="1" SelectedIndex="{Binding SelectedSkillIndex}"
                      Width="100" Margin="0, 0, 10, 0">
                <ComboBoxItem>第1技能</ComboBoxItem>
                <ComboBoxItem>第2技能</ComboBoxItem>
                <ComboBoxItem>第3技能</ComboBoxItem>
            </ComboBox>
            <Button Grid.Column="2" Content="计算" Command="{Binding CalculateSkillMaterialCommand}"
                    Margin="0, 0, 10, 0"/>
        </Grid>
        <Grid Grid.Row="2" ColumnDefinitions="*, *" Margin="10, 10, 0, 0">
            <DataGrid Grid.Column="0" ItemsSource="{Binding NeedComposition}"
                      AutoGenerateColumns="False" IsReadOnly="True" CanUserSortColumns="False"
                      GridLinesVisibility="All" BorderThickness="1" BorderBrush="Gray"
                      Margin="0, 0, 10, 0">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="需要合成的材料名称"  Binding="{Binding Key}"/>
                    <DataGridTextColumn Header="数量" Binding="{Binding Value}" />
                </DataGrid.Columns>
            </DataGrid>
            <DataGrid Grid.Column="1" ItemsSource="{Binding LackRarity2}"
                      AutoGenerateColumns="False" IsReadOnly="True" CanUserSortColumns="False"
                      GridLinesVisibility="All" BorderThickness="1" BorderBrush="Gray"
                      Margin="0, 0, 10, 0">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="总计欠缺的2级材料名称"  Binding="{Binding Key}"/>
                    <DataGridTextColumn Header="数量" Binding="{Binding Value}" />
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>

</Window>
